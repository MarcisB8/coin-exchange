{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/Helicopter/Helicopter.jsx","logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["CoinRow","styled","td","Button","button","InputStyle","input","Coin","props","useState","value","setValue","Input","placeholder","onChange","event","target","name","ticker","price","showBalance","balance","action","method","onClick","preventDefault","handleRefresh","tickerId","type","style","handleBuy","handleSell","Table","table","CoinList","className","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","handleToggle","Helicopter","handleHelicopter","Header","header","Logo","img","Title","h1","ExchangeHeader","src","logo","alt","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","coin_id","window","confirm","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d114cf4e.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CoinRow = styled.td`\r\n  border: 1px solid #cccccc;\r\n  width: 25vh;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: 1px solid #cccccc;\r\n  color: #cccccc;\r\n  background-color: rgb(40, 100, 130);\r\n`;\r\n\r\nconst InputStyle = styled.input`\r\n  border: none;\r\n  width: 25vh;\r\n  background-color: rgb(40, 100, 130);\r\n`;\r\n\r\nexport default function Coin (props) {\r\n\r\n    const handleClick = (event) => {\r\n      // prevent the default action of submitting the form\r\n      event.preventDefault();\r\n      props.handleRefresh(props.tickerId);\r\n    }\r\n\r\n    const [value, setValue] = useState();\r\n\r\n    const Input = () => {\r\n      \r\n      const onChange = (event) => {\r\n        setValue(event.target.value);\r\n      };\r\n      return (\r\n        <>\r\n          <input placeholder=\"Enter amount\" value={value} onChange={onChange} />\r\n        </>\r\n      );\r\n    }\r\n\r\n    const HandleBuyClick = (event) => {\r\n\r\n      event.preventDefault();\r\n      props.handleBuy(value, props.tickerId, props.price)\r\n    }\r\n\r\n    const HandleSellClick = (event) => {\r\n\r\n      event.preventDefault();\r\n      props.handleSell(value, props.tickerId, props.price)\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n          <CoinRow>{props.name}</CoinRow>\r\n          <CoinRow>{props.ticker}</CoinRow>\r\n          <CoinRow>${props.price}</CoinRow>\r\n          {props.showBalance ? <CoinRow>{props.balance}</CoinRow> : null}\r\n          <CoinRow>\r\n            <form action=\"#\" method=\"POST\">\r\n              <Button onClick = {handleClick}>Refresh</Button>\r\n            </form>\r\n            <form action=\"#\" method=\"POST\">\r\n              <Input type=\"number\" style={InputStyle}/><br></br>\r\n              <Button onClick = {HandleBuyClick}>Buy</Button>\r\n              <Button onClick = {HandleSellClick}>Sell</Button>\r\n            </form>\r\n          </CoinRow>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin: 50px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList (props) {\r\n    \r\n    return (\r\n        <Table className=\"coin-table\">\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Ticker</th>\r\n                {props.showBalance ? <th>Balance</th> : null}\r\n                <th>Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                props.coinData.map( ({key, name, ticker, price, balance}) => \r\n                    <Coin key={key}\r\n                        handleRefresh={props.handleRefresh}\r\n                        handleBuy={props.handleBuy}\r\n                        handleSell={props.handleSell}\r\n                        name={name} \r\n                        ticker={ticker} \r\n                        price={price}\r\n                        balance={balance}\r\n                        showBalance={props.showBalance}\r\n                        tickerId={key} />\r\n                    )\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: 1px solid #cccccc;\r\n  color: #cccccc;\r\n  background-color: rgb(40, 100, 130);\r\n`;\r\n\r\nexport default function AccountBalance (props) {\r\n    \r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = null;\r\n    \r\n    if (props.showBalance) {\r\n        content = <> Balance: $ {props.amount} </> \r\n    }\r\n    \r\n    return (\r\n        <Section>\r\n            {content} <br></br>\r\n            <Button onClick = {props.handleToggle}>{buttonText}</Button>\r\n        </Section>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: 1px solid #cccccc;\r\n  color: #cccccc;\r\n  background-color: rgb(40, 100, 130);\r\n`;\r\n\r\nexport default function Helicopter (props) {\r\n    \r\n    const buttonText = \"Airdrop!\";\r\n    \r\n    return (\r\n        <Section>\r\n            <Button onClick = {props.handleHelicopter}>{buttonText}</Button>\r\n        </Section>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    font-size: 36px;\r\n    color: white;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Logo src={logo} alt=\"React logo\"/>\r\n                <Title>\r\n                    Coin exchange\r\n                </Title>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport Helicopter from './components/Helicopter/Helicopter';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport axios from 'axios';\n\nconst Div = styled.div`\n    text-align: center;\n    background-color: rgb(30, 84, 119);\n    color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App (props) {\n  \n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all( promises );\n    const coinPriceData = coinData.map (function(response) {\n    const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price)\n      }\n    })\n\n    setCoinData(coinPriceData);\n  }\n\n  useEffect (function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/' + valueChangeId;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = {...values};\n      if ( valueChangeId === values.key ) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  const handleToggle = () => {\n    \n      setShowBalance(oldValue => !oldValue);\n  } \n  const handleHelicopter = () => {\n    \n    setBalance(oldValue => oldValue + 1200);\n  }\n  const handleBuy = (value, coin_id, price) => {\n    debugger;\n    const newCoinData = coinData.map(values =>{\n      let newValues = {...values};\n      \n      if(coin_id === newValues.key){\n\n        if(balance >= price*value){\n          var check = window.confirm(\"Buy \" + value + \" \" + coin_id + \" for \" + price*value + \" USD?\");\n          if (check === true) {\n            newValues.price = price;\n            newValues.balance += parseFloat(value);\n            setBalance(balance - price*value);\n          } \n        }\n        else {\n          alert(\"Insufficient funds\");\n        }\n      }\n        return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n\n  const handleSell = (value, coin_id, price) => {\n\n    const newCoinData = coinData.map(values =>{\n    let newValues = {...values};\n    \n    if(coin_id === newValues.key){\n      if(newValues.balance >= value){\n        var check = window.confirm(\"Sell \" + value + \" \" + coin_id + \" for \" + price*value + \" USD?\");\n        if (check === true) {\n          newValues.price = price;\n          newValues.balance -= value;\n          setBalance(balance + price*value);\n        }\n      }\n      else {\n        alert(\"Insufficient funds\");\n      }\n    }\n      return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <Div>\n      <ExchangeHeader />\n      <AccountBalance amount={balance} showBalance={showBalance} handleToggle={handleToggle}/>\n      <Helicopter handleHelicopter={handleHelicopter} />\n      <CoinList coinData={coinData} showBalance={showBalance} handleRefresh={handleRefresh} handleBuy={handleBuy} handleSell={handleSell}/>\n    </Div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}