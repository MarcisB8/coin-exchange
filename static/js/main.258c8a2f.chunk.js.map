{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["CoinRow","styled","td","Actions","Button","button","Coin","props","useState","value","setValue","Input","className","placeholder","onChange","event","target","name","ticker","price","showBalance","balance","action","method","onClick","preventDefault","handleRefresh","tickerId","type","handleBuy","handleSell","Table","table","CoinList","coinData","map","key","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleToggle","handleHelicopter","Header","header","Logo","img","Title","h1","ExchangeHeader","src","logo","alt","Component","Div","formatPrice","parseFloat","Number","toFixed","App","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","coin_id","undefined","window","confirm","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.258c8a2f.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CoinRow = styled.td`\r\n  border: 1px solid #cccccc;\r\n  width: 9vw;\r\n`;\r\n\r\nconst Actions = styled(CoinRow)`\r\n    width: 29vw;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 15px;\r\n  width: 80px;\r\n`;\r\n\r\nexport default function Coin (props) {\r\n\r\n    const handleClick = (event) => {\r\n      // prevent the default action of submitting the form\r\n      event.preventDefault();\r\n      props.handleRefresh(props.tickerId);\r\n    }\r\n\r\n    const [value, setValue] = useState();\r\n\r\n    const Input = () => {\r\n      \r\n      const onChange = (event) => {\r\n        setValue(event.target.value);\r\n      };\r\n      return (\r\n        <>\r\n          <input className=\"ml-5 mt-2 mr-2 bg-info text-white border-0 w-25\" placeholder=\"Enter amount\" value={value} onChange={onChange} />\r\n        </>\r\n      );\r\n    }\r\n\r\n    const HandleBuyClick = (event) => {\r\n\r\n      event.preventDefault();\r\n      props.handleBuy(value, props.tickerId, props.price)\r\n    }\r\n\r\n    const HandleSellClick = (event) => {\r\n\r\n      event.preventDefault();\r\n      props.handleSell(value, props.tickerId, props.price)\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n          <CoinRow>{props.name}</CoinRow>\r\n          <CoinRow>{props.ticker}</CoinRow>\r\n          <CoinRow>${props.price}</CoinRow>\r\n          <CoinRow>{props.showBalance ? props.balance : \"-\"}</CoinRow>\r\n          <Actions>\r\n            <form action=\"#\" method=\"POST\">\r\n              <Button className=\"mb-2 mr-5 btn btn-info\" onClick = {handleClick}>Refresh</Button>\r\n              <Input type=\"number\"/>\r\n              <Button className=\"mb-2 mr-2 btn btn-warning\" onClick = {HandleBuyClick}>Buy</Button>\r\n              <Button className=\"mb-2 btn btn-danger\" onClick = {HandleSellClick}>Sell</Button>\r\n            </form>\r\n          </Actions>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}\r\n","import React from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin: 50px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList (props) {\r\n    \r\n    return (\r\n        <Table>\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Ticker</th>\r\n                <th>Balance</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                props.coinData.map( ({key, name, ticker, price, balance}) => \r\n                    <Coin key={key}\r\n                        handleRefresh={props.handleRefresh}\r\n                        handleBuy={props.handleBuy}\r\n                        handleSell={props.handleSell}\r\n                        name={name} \r\n                        ticker={ticker} \r\n                        price={price}\r\n                        balance={balance}\r\n                        showBalance={props.showBalance}\r\n                        tickerId={key} />\r\n                    )\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n    line-height: 3rem;\r\n`;\r\n\r\nconst Balance = styled.div`\r\n    min-width: 250px;\r\n    margin: 0.5rem 0 0 2.5rem;\r\n    font-size: 2rem;\r\n    vertical-align: middle;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin: 0 8px;\r\n`;\r\n\r\nconst BalanceToggleButton = styled(Button)`\r\n    width: 150px;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\nexport default function AccountBalance (props) {\r\n    \r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = '\\u00A0';\r\n    if (props.showBalance) {\r\n        content = <> {formatter.format (props.amount)} </>;\r\n    }\r\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Balance>{content}</Balance> \r\n            <Section>\r\n                <BalanceToggleButton onClick = {props.handleToggle} className = {buttonClass}>{buttonText}</BalanceToggleButton>\r\n                <Button onClick = {props.handleHelicopter} className=\"btn btn-success\"><i className=\"fas fa-helicopter\"></i></Button>\r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    font-size: 36px;\r\n    color: white;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Logo src={logo} alt=\"React logo\"/>\r\n                <Title>\r\n                    Coin exchange\r\n                </Title>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport axios from 'axios';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\n\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst Div = styled.div`\n    text-align: center;\n    background-color: rgb(30, 84, 119);\n    color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App (props) {\n  \n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all( promises );\n    const coinPriceData = coinData.map (function(response) {\n    const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price)\n      }\n    })\n\n    setCoinData(coinPriceData);\n  }\n\n  useEffect (function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/' + valueChangeId;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = {...values};\n      if ( valueChangeId === values.key ) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  const handleToggle = () => {\n    \n      setShowBalance(oldValue => !oldValue);\n  } \n  const handleHelicopter = () => {\n    \n    setBalance(oldValue => oldValue + 1200);\n  }\n  const handleBuy = (value, coin_id, price) => {\n    debugger;\n    const newCoinData = coinData.map(values =>{\n      let newValues = {...values};\n      \n      if(coin_id === newValues.key && value !== undefined){\n\n        if(balance >= price*value){\n          var check = window.confirm(\"Buy \" + value + \" \" + coin_id + \" for \" + price*value + \" USD?\");\n          if (check === true) {\n            newValues.price = price;\n            newValues.balance += parseFloat(value);\n            setBalance(balance - price*value);\n          } \n        }\n        else {\n          alert(\"Insufficient funds\");\n        }\n      }\n        return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n\n  const handleSell = (value, coin_id, price) => {\n\n    const newCoinData = coinData.map(values =>{\n    let newValues = {...values};\n    \n    if(coin_id === newValues.key){\n      if(newValues.balance >= value){\n        var check = window.confirm(\"Sell \" + value + \" \" + coin_id + \" for \" + price*value + \" USD?\");\n        if (check === true) {\n          newValues.price = price;\n          newValues.balance -= value;\n          setBalance(balance + price*value);\n        }\n      }\n      else {\n        alert(\"Insufficient funds\");\n      }\n    }\n      return newValues;\n    })\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <Div>\n      <ExchangeHeader />\n      <AccountBalance amount={balance} showBalance={showBalance} handleToggle={handleToggle} handleHelicopter={handleHelicopter}/>\n      <CoinList coinData={coinData} showBalance={showBalance} handleRefresh={handleRefresh} handleBuy={handleBuy} handleSell={handleSell}/>\n    </Div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}